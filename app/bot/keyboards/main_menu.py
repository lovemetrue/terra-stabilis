from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder


def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="üìä –°–±–æ—Ä –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"),
        KeyboardButton(text="üìê –†–∞—Å—á—ë—Ç —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏"),
        KeyboardButton(text="üë®‚Äçüíº –ì–µ–æ–º–µ—Ö–∞–Ω–∏–∫ –Ω–∞ —á–∞—Å"),
        KeyboardButton(text="üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"),
        KeyboardButton(text="üíß –ì–∏–¥—Ä–æ–≥–µ–æ–ª–æ–≥–∏—è"),
        KeyboardButton(text="üè¢ –û –∫–æ–º–ø–∞–Ω–∏–∏"),
        KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(2)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
    return builder.as_markup(resize_keyboard=True)


def get_geodata_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–±–æ—Ä–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="üìù –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≥–µ–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π"),
        KeyboardButton(text="üíé –ì–µ–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—Ä–Ω–∞"),
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_stability_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="2D –û–ì–†"),
        KeyboardButton(text="2D –ü–ì–†"),
        KeyboardButton(text="3D –û–ì–†"),
        KeyboardButton(text="3D –ü–ì–†"),
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)


def get_monitoring_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="üî∫ –ü—Ä–∏–∑–º–µ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"),
        KeyboardButton(text="üì° –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≥–µ–æ—Ä–∞–¥–∞—Ä–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"),
        KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä–æ–≥–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ TARP"),
        KeyboardButton(text="üìã –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ TARP"),
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_hydrogeology_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–∏–¥—Ä–æ–≥–µ–æ–ª–æ–≥–∏–∏"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="üåä –ì–∏–¥—Ä–æ–≥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —É—á–∞—Å—Ç–∫–∞"),
        KeyboardButton(text="üìä –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–∫–≤–∞–∂–∏–Ω"),
        KeyboardButton(text="üíª –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞"),
        KeyboardButton(text="üîß –†–∞—Å—á–µ—Ç –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –∏ –ø—Ä–æ–µ–∫—Ç –¥—Ä–µ–Ω–∞–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"),
        KeyboardButton(text="üìà –ì–∏–¥—Ä–æ–≥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"),
        KeyboardButton(text="‚öñÔ∏è –û—Ü–µ–Ω–∫–∞ –≤–ª–∏—è–Ω–∏—è –ø–æ–¥–∑–µ–º–Ω—ã—Ö –≤–æ–¥ –Ω–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å"),
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_geomechanic_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–µ–æ–º–µ—Ö–∞–Ω–∏–∫–∞ –Ω–∞ —á–∞—Å"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="üë®‚Äçüíº –í–µ–¥—É—â–∏–π –≥–µ–æ–º–µ—Ö–∞–Ω–∏–∫"),
        KeyboardButton(text="üë®‚Äçüî¨ –ì–ª–∞–≤–Ω—ã–π –≥–µ–æ–º–µ—Ö–∞–Ω–∏–∫"),
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_contact_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="‚úÖ –û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã"),
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_skip_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"),
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_back_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π –ù–∞–∑–∞–¥"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_phone_input_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True),
        KeyboardButton(text="üìù –í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é"),
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_manual_phone_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_yes_no_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç"""
    builder = ReplyKeyboardBuilder()

    buttons = [
        KeyboardButton(text="‚úÖ –î–∞"),
        KeyboardButton(text="‚ùå –ù–µ—Ç"),
        KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
    ]

    for button in buttons:
        builder.add(button)

    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)